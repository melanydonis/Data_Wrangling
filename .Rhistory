RetornoApple <- round((Paapl-Paapl0),2)
Pamzn <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Amazon" & PreciosNuevos$Dia == 316),3],2)
Pamzn0 <- amzn[nrow(amzn),1]
RetornoAmazon <- round((Pamzn-Pamzn0),2)
Padbe <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Adobe" & PreciosNuevos$Dia == 316),3],2)
Padbe0 <- adbe[nrow(adbe),1]
RetornoAdobe <- round((Padbe-Padbe0),2)
Pfb <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Facebook" & PreciosNuevos$Dia == 316),3],2)
Pfb0 <- fb[nrow(fb),1]
RetornoFacebook <- round((Pfb-Pfb0),2)
Pdis <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Disney" & PreciosNuevos$Dia == 316),3],2)
Pdis0 <- dis[nrow(dis),1]
RetornoDisney <- round((Pdis-Pdis0),2)
Ppypl <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Paypal" & PreciosNuevos$Dia == 316),3],2)
Ppypl0 <- pypl[nrow(pypl),1]
RetornoPaypal <- round((Ppypl-Ppypl0),2)
Pv <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Visa" & PreciosNuevos$Dia == 316),3],2)
Pv0 <- v[nrow(v),1]
RetornoVisa <- round((Pv-Pv0),2)
Pt <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="AT&T" & PreciosNuevos$Dia == 316),3],2)
Pt0 <- t[nrow(t),1]
RetornoATT <- round((Pt-Pt0),2)
Pspot <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Spotify" & PreciosNuevos$Dia == 316),3],2)
Pspot0 <- spot[nrow(spot),1]
RetornoSpotify <- round((Pspot-Pspot0),2)
Peqix <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Equinix" & PreciosNuevos$Dia == 316),3],2)
Peqix0 <- eqix[nrow(eqix),1]
RetornoEquinix <- round((Peqix-Peqix0),2)
Ppld <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Prologist" & PreciosNuevos$Dia == 316),3],2)
Ppld0 <- pld[nrow(pld),1]
RetornoPrologist <- round((Ppld-Ppld0),2)
Punh <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="UnitedHealth" & PreciosNuevos$Dia == 316),3],2)
Punh0 <- unh[nrow(unh),1]
RetornoUnitedHealth <- round((Punh-Punh0),2)
Pftv <- round(PreciosNuevos[which(PreciosNuevos$Empresa=="Fortive" & PreciosNuevos$Dia == 316),3],2)
Pftv0 <- ftv[nrow(ftv),1]
RetornoFortive <- round((Pftv-Pftv0),2)
#results <- data.frame(Empresa = c("Google", "Netflix", "Amgen", "Gilead", "CSL", "Microsoft", "Dell", "Apple", "Amazon",
# "Adobe", "Facebook", "Disney", "Paypal", "Visa", "AT&T", "Spotify", "Equinix", "Prologist",
# "UnitedHealth", "Fortive"))
#results$PrecioCompra <- format(c(Pgoog0, Pnflx0, Pamgn0, Pgild0, Pcsl0, Pmsft0, Pdell0, Paapl0, Pamzn0, Padbe0, Pfb0, Pdis0,
# Ppypl0, Pv0, Pt0, Pspot0, Peqix0, Ppld0, Punh0, Pftv0),big.mark = ",")
#results$PrecioVenta <- format(c(Pgoog, Pnflx, Pamgn, Pgild, Pcsl, Pmsft, Pdell, Paapl, Pamzn, Padbe, Pfb, Pdis, Ppypl, Pv,
# Pt, Pspot, Peqix, Ppld, Punh, Pftv),big.mark = ",")
#results$Retorno <- as.numeric(c(RetornoGoogle, RetornoNetflix, RetornoAmgen, RetornoGilead, RetornoCSL, RetornoMicrosoft,
# RetornoDell, RetornoApple, RetornoAmazon, RetornoAdobe, RetornoFacebook, RetornoDisney,
# RetornoPaypal, RetornoVisa, RetornoATT, RetornoSpotify, RetornoEquinix, RetornoPrologist,
# RetornoUnitedHealth, RetornoFortive))
#results$Beta <- c(0.96, 1.36, 0.89, 1.17, 1.24, 0.97, 1.1, 1.08, 1.58, 1.06, 1.25, 0.72, 0.84, 0.82, 0.82, 1.28, 0.68, 1.01, 0.68, 1.2)
#results <- results %>%  arrange(desc(Retorno))
#view(results)
results$Acciones <- format(c(207, 402, 649, 230, 577, 860, 1832, 1083, 872, 670, 1485, 481, 771, 622, 1627, 845, 2080, 64, 3516, 292),big.mark = ",")
results$TotalCompra <- format(c(206*Pgoog0, 402*Padbe0, Pamgn0*649, 230*Peqix0, 577*Paapl0, 860*Pcsl0, 1832*Pgild0, 1083*Ppypl0, 872*Pmsft0, 670*Pv0, 1485*Ppld0, 481*Punh0, 771*Pspot0, 622*Pfb0, 1627*Pftv0, 845*Pdis0, 2080*Pdell0, 64*Pamzn0, 3516*Pt0, 292*Pnflx0),big.mark = ",")
#results$TotalVenta <- format(c(Pgoog*206.78, 402.09*Padbe, Pamgn*649.74, 230.57*Peqix, 577.92*Paapl, 860.46*Pcsl, 1832.90*Pgild, 1083.03*Ppypl, 872.09*Pmsft, 670.73*Pv, 1485.52*Ppld, 481.44*Punh, 771.16*Pspot, 622.63*Pfb, 1627.12*Pftv, 845.96*Pdis, 2080.08*Pdell, 64.68*Pamzn, 3517.00*Pt, Pnflx*281.69),big.mark = ",")
results$TotalVenta <- format(c(1684.59*207, 402*642.98, 345.18*649, 230*669.42, 577*313.70, 860*213.8, 1832*122.27, 1083*155.55, 872*180.31, 670*219.62, 1485*112.25, 481*279.71, 771*175.8, 622*211.71, 1627*85.26, 845*150.28, 2080*65.45, 64*1860.45, 3516*38.9, 291.07*292),big.mark = ",")
#Venta <- dollar(sum(Pgoog, Pnflx, Pamgn, Pgild, Pcsl, Pmsft, Pdell, Paapl, Pamzn, Padbe, Pfb, Pdis, Ppypl, Pv, Pt, Pspot, Peqix, Ppld, Punh, Pftv))
Venta <- dollar(sum(1684.59*207, 402*642.98, 345.18*649, 230*669.42, 577*313.70, 860*213.8, 1832*122.27, 1083*155.55, 872*180.31, 670*219.62, 1485*112.25, 481*279.71, 771*175.8, 622*211.71, 1627*85.26, 845*150.28, 2080*65.45, 64*1860.45, 3516*38.9, 291.07*292))
Inversion <- dollar(sum(206*Pgoog0, 402*Padbe0, Pamgn0*649, 230*Peqix0, 577*Paapl0, 860*Pcsl0, 1832*Pgild0, 1083*Ppypl0, 872*Pmsft0, 670*Pv0, 1485*Ppld0, 481*Punh0, 771*Pspot0, 622*Pfb0, 1627*Pftv0, 845*Pdis0, 2080*Pdell0, 64*Pamzn0, 3516*Pt0, 292*Pnflx0))
#Ganancia <- dollar(sum(Pgoog, Pnflx, Pamgn, Pgild, Pcsl, Pmsft, Pdell, Paapl, Pamzn, Padbe, Pfb, Pdis, Ppypl, Pv, Pt, Pspot, Peqix, Ppld, Punh, Pftv)- sum(Pgoog0, Pnflx0, Pamgn0, Pgild0, Pcsl0, Pmsft0, Pdell0, Paapl0, Pamzn0, Padbe0, Pfb0, Pdis0, Ppypl0, Pv0, Pt0, Pspot0, Peqix0, Ppld0, Punh0, Pftv0))
Ganancia <- dollar(sum(1684.59*207, 402*642.98, 345.18*649, 230*669.42, 577*313.70, 860*213.8, 1832*122.27, 1083*155.55, 872*180.31, 670*219.62, 1485*112.25, 481*279.71, 771*175.8, 622*211.71, 1627*85.26, 845*150.28, 2080*65.45, 64*1860.45, 3516*38.9, 291.07*292)- sum(206*Pgoog0, 402*Padbe0, Pamgn0*649, 230*Peqix0, 577*Paapl0, 860*Pcsl0, 1832*Pgild0, 1083*Ppypl0, 872*Pmsft0, 670*Pv0, 1485*Ppld0, 481*Punh0, 771*Pspot0, 622*Pfb0, 1627*Pftv0, 845*Pdis0, 2080*Pdell0, 64*Pamzn0, 3516*Pt0, 292*Pnflx0))
Riesgo <- mean(0.96, 1.36, 0.89, 1.17, 1.24, 0.97, 1.1, 1.08, 1.58, 1.06, 1.25, 0.72, 0.84, 0.82, 0.82, 1.28, 0.68, 1.01, 0.68, 1.2)
resultsD <- data.frame(Inversion, Venta, Ganancia, Riesgo)
View(PreciosNuevos)
install.packages("lubridate")
install.packages("nycflights13")
require(lubridate)
require(nycflights13)
now()
date_string <- "1994 October 27th"
as.Date(date_string)
ymd(date_string)
date0 <- "23/11/2018"
date0 <- 23/11/2018
as.Date(date0)
as.Date(date0, format = "%d/%m/%Y")
date0 <- "23/11/2018"
as.Date(date0, format = "%d/%m/%Y")
date0 <- "23/11/2018"
dmy(date0)
date1 <- "1994-10-27 14:00:00UTC"
as.Date(date1, format = "%Y-%m-%d %H:%M:%S")
ymd_hms(date1)
date1 <- "1994-10-27 14:00:00"
as.Date(date1, format = "%Y-%m-%d %H:%M:%S")
ymd_hms(date1)
flights %>% head()
require(nycflights13)
flights %>% head()
require(dplyr)
flights %>% head()
make_date(year = 2019, month = 10, day = 10)
make_date(year = 2019, month = 10, day = 10)
flights
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_date(year = year, month = month, day = day, hour = hour, minute = minute))
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_date(year = year, month = month, day = day, hour = hour, minute = minute))
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_date(year = year, month = month, day = day))
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, minute = minute))
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, minute = minute))
flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute))
flights %>% head()
day(flights)
day(flights$day)
flights %>% head()
day(flights$day)
day(flights0)
flights0 <- flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute))
day(flights0)
flights0 <- data.frame(flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute)))
day(flights0)
day(flights0$day)
flights0 <- flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute))
flights0 %>%group_by(day)
flights0 %>%group_by(day(departure))
flights0 %>%group_by(day(departure)) %>% count()
flights0 %>% mutate(weekday = wday(departure)) %>% group_by(weekday) %>% count()
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count()
#ord es un factor ordenado, los niveles tienen un orden, los dias tienen un orden en lugar de alfabeticamente
plot_ly(x= weekday, y = count(, type= "bar"))
install.packages("plotly")
require(plotly)
#ord es un factor ordenado, los niveles tienen un orden, los dias tienen un orden en lugar de alfabeticamente
plot_ly(x= weekday, y = count(, type= "bar"))
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count()
#ord es un factor ordenado, los niveles tienen un orden, los dias tienen un orden en lugar de alfabeticamente
plot_ly(x= weekday, y = count(, type= "bar"))
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count() %>% plot_ly(x= weekday, y = count(, type= "bar"))
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count() %>% plot_ly(x= weekday, y = count, type= "bar")
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count() %>% plot_ly(x= weekday, y = count, type= "bar")
flights0 <- flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute))
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count() %>% plot_ly(x= weekday, y = count, type= "bar")
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count() %>% plot_ly(x= ~weekday, y = ~count, type= "bar")
make_date(year = 2019, month = 10, day = 10)
flights0 <- flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute))
#vuelos por dia
flights0 %>%group_by(day(departure)) %>% count()
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% count() %>% plot_ly(x= ~weekday, y = ~count, type= "bar")
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% summarise(count = n()) %>% plot_ly(x= ~weekday, y = ~count, type= "bar")
date1 - date0
require(lubridate)
require(nycflights13)
require(dplyr)
require(plotly)
now()
date_string <- "1994 October 27th"
as.Date(date_string)
ymd(date_string)
date0 <- "23/11/2018"
as.Date(date0, format = "%d/%m/%Y")
dmy(date0)
date1 <- "1994-10-27 14:00:00UTC"
as.Date(date1, format = "%Y-%m-%d %H:%M:%S")
ymd_hms(date1)
flights %>% head()
make_date(year = 2019, month = 10, day = 10)
flights0 <- flights %>%
select(year, month, day, hour, minute) %>%
mutate(departure = make_datetime(year = year, month = month, day = day, hour = hour, min = minute))
#vuelos por dia
flights0 %>%group_by(day(departure)) %>% count()
flights0 %>% mutate(weekday = wday(departure, label = T)) %>% group_by(weekday) %>% summarise(count = n()) %>% plot_ly(x= ~weekday, y = ~count, type= "bar")
#ord es un factor ordenado, los niveles tienen un orden, los dias tienen un orden en lugar de alfabeticamente
date1 - date0
date2 <- "20/12/2018"
as.Date(date0, format = "%d/%m/%Y")
dmy(date0)
date2 - date0
date0 <- "23/11/2018"
as.Date(date0, format = "%d/%m/%Y")
dmy(date0)
date2 <- "20/12/2018"
as.Date(date0, format = "%d/%m/%Y")
dmy(date0)
date0 <- dmy(date0)
date2 <- dmy(date0)
date2 <- "20/12/2018"
as.Date(date0, format = "%d/%m/%Y")
date2 <- dmy(date0)
date2 <- dmy(date2)
date2 - date0
date0 <- "23/11/2018"
as.Date(date0, format = "%d/%m/%Y")
date0 <- dmy(date0)
date1 <- "1994-10-27 14:00:00UTC"
as.Date(date1, format = "%Y-%m-%d %H:%M:%S")
ymd_hms(date1)
date2 <- "20/12/2018"
as.Date(date0, format = "%d/%m/%Y")
date2 <- dmy(date2)
date2 - date0
date0 <- "23/11/2018"
as.Date(date0, format = "%d/%m/%Y")
date0 <- dmy(date0)
date1 <- "20/12/2018"
as.Date(date1, format = "%d/%m/%Y")
date1 <- dmy(date1)
date1 - date0
difftime(time1 = date0, time2 = date1, units = 'secs')
difftime(time1 = date0, time2 = date1, units = 'weeks')
days(date1)
days(date0 - date1)
ddays(date0 - date1)
days(14)
ddays(14)
begin <- c("May 11, 1996 12:05")
begin <- c("May 11, 1996 12:05")
end <- c("7/8/97 8:00")
begin<- mdy_hm(begin)
end <- mdy_hm(end)
end
begin %--% end
#intervalo, cada elemento se vuelve un intervalo de fechas
time_interval <- begin %--% end
as.duration(time_interval)
as.period(time_interval)
require(lubridate)
begin <- "21-08-2017 18:26:40"
SM<- days(29) + hour(12) + min(44) + sec(3)
SM <- days(29) + hour(12) + minutes(44) + sec(3)
SM <- days(29) + hours(12) + minutes(44) + secs(3)
require(lubridate)
begin <- "21-08-2017 18:26:40"
SM <- days(29) + hours(12) + minutes(44) + seconds(3)
saros <- 223*SM
saros
begin <- dmy_hms(begin)
end <- begin + saros
end
require(lubridate)
ultimo_eclipse <- "21-08-2017 18:26:40"
ultimo_eclipse <- dmy_hms(ultimo_eclipse)
SynodicMonth <- days(29) + hours(12) + minutes(44) + seconds(3)
saros <- 223*SynodicMonth
siguiente_eclipse <- ultimo_eclipse + saros
siguiente_eclipse
library(readr)
library(dplyr)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
datos <- read_xlsx('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.xlsx')
library(readr)
library(dplyr)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
library(readr)
library(dplyr)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
head(datos)
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n()) %>% arrange(desc(n))
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n()) %>% arrange(desc(n))
require(lubridate)
ultimo_eclipse <- "21-08-2017 18:26:40"
ultimo_eclipse <- dmy_hms(ultimo_eclipse)
SynodicMonth <- days(29) + hours(12) + minutes(44) + seconds(3)
saros <- 223*SynodicMonth
siguiente_eclipse <- ultimo_eclipse + saros
siguiente_eclipse
library(readr)
library(dplyr)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
head(datos)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$Mes <- month(datos$`Fecha Creación`, label = T)
datos$Dia <- wday(datos$`Fecha Creación`, label = T)
datos$Inicio <- paste(datos$`Fecha Creación`,datos$`Hora Creación`)
datos$Inicio <- ymd_hms(datos$Inicio)
datos$Final <- paste(datos$`Fecha Final`,datos$`Hora Final`)
datos$Final <- dmy_hms(datos$Final)
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n()) %>% arrange(desc(n))
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
promedio <- mean(datos$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n()) %>% arrange(desc(n))
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n()) %>% arrange(desc(n))
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n()) %>% arrange(desc(CantidadLlamadas))
datos6
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos6
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
promedio <- mean(datos$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos6
require(lubridate)
ultimo_eclipse <- "21-08-2017 18:26:40"
ultimo_eclipse <- dmy_hms(ultimo_eclipse)
SynodicMonth <- days(29) + hours(12) + minutes(44) + seconds(3)
saros <- 223*SynodicMonth
siguiente_eclipse <- ultimo_eclipse + saros
siguiente_eclipse
library(readr)
library(dplyr)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
head(datos)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$Mes <- month(datos$`Fecha Creación`, label = T)
datos$Dia <- wday(datos$`Fecha Creación`, label = T)
datos$Inicio <- paste(datos$`Fecha Creación`,datos$`Hora Creación`)
datos$Inicio <- ymd_hms(datos$Inicio)
datos$Final <- paste(datos$`Fecha Final`,datos$`Hora Final`)
datos$Final <- dmy_hms(datos$Final)
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
promedio <- mean(datos$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos6
datos6 <- datos %>% select(duracion) %>% filter = (duracion >0) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
promedio <- mean(datos$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- datos %>% select(duracion) %>% filter = (duracion >0) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos6 <- datos %>% select(duracion) %>% filter = (duracion > 0) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
promedio <- mean(datos$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- datos %>% select(duracion) %>% filter = (duracion > 0) %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos6 <- datos %>% select(duracion) %>% filter = (duracion > "0") %>% group_by(duracion) %>% summarise(CantidadLlamadas = n())
datos$duracion
datos
datos6 <- datos %>% select(duracion)  %>% summarise(CantidadLlamadas = n())
datos6
datos6 <- datos %>% select(duracion)  %>% group_by(duracion) summarise(CantidadLlamadas = n())
datos6 <- datos %>% select(duracion)  %>% group_by(duracion) summarise(n = n())
datos6 <- datos %>% select(duracion) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n())
datos6
datos6 <- datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n())
datos6
datos6 <- datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n())
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~n, type= "bar")
library(readr)
library(dplyr)
require(plotly)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
head(datos)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$Mes <- month(datos$`Fecha Creación`, label = T)
datos$Dia <- wday(datos$`Fecha Creación`, label = T)
datos$Inicio <- paste(datos$`Fecha Creación`,datos$`Hora Creación`)
datos$Inicio <- ymd_hms(datos$Inicio)
datos$Final <- paste(datos$`Fecha Final`,datos$`Hora Final`)
datos$Final <- dmy_hms(datos$Final)
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
promedio <- mean(datos$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n())
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~n, type= "bar")
datos6 <- datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n())
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~n, type= "bar")
datos6 <- datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n())
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~CantidadLlamadas, type= "bar")
datos4 <- ts(datos)
datos4
datos4 <- ts(datos)
plot.ts(datos4)
datos4 <- ts(datos, frequency = 365)
plot.ts(datos4)
datos4 <- ts(datos, frequency = 12)
plot.ts(datos4)
datos4 <- na.omit(datos)
datos4 <- ts(datos, frequency = 12)
plot.ts(datos4)
datos4 <- na.omit(datos)
datos4 <- ts(datos, frequency = 12)
plot(datos4)
datos4 <- ts(datos, frequency = 12)
datos4
datos4 <- hist(datos)
datos4 <- datos %>% select(`Fecha Creación`) %>% group_by(`Fecha Creación`) %>% summarise(n = n())
datos4
datos4 <- datos %>% select(`Fecha Creación`) %>% group_by(`Fecha Creación`) %>% summarise(n = n())
datos4
datos4 %>% plot_ly(x= ~`Fecha Creación`, y = ~n, type= "bar")
datos4 <- datos %>% select(`Fecha Creación`) %>% group_by(`Fecha Creación`) %>% summarise(n = n())
datos4
datos4 %>% plot_ly(x= ~`Fecha Creación`, y = ~n, type= "p")
datos4 <- datos %>% select(`Fecha Creación`) %>% group_by(`Fecha Creación`) %>% summarise(n = n())
datos4
datos4 %>% plot_ly(x= ~`Fecha Creación`, y = ~n, type = 'scatter', mode = 'lines')
datos6 <- table(datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n()))
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~CantidadLlamadas, type= "bar")
datos6 <- data.frame(datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n()))
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~CantidadLlamadas, type= "bar")
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
datos5 <- datos %>% select(duracion) %>% filter(duracion >0)
promedio <- mean(datos5)
promedio
#La llamada promedio dura 7.78 minutos
library(readr)
library(dplyr)
require(plotly)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
head(datos)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$Mes <- month(datos$`Fecha Creación`, label = T)
datos$Dia <- wday(datos$`Fecha Creación`, label = T)
datos$Inicio <- paste(datos$`Fecha Creación`,datos$`Hora Creación`)
datos$Inicio <- ymd_hms(datos$Inicio)
datos$Final <- paste(datos$`Fecha Final`,datos$`Hora Final`)
datos$Final <- dmy_hms(datos$Final)
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
datos5 <- datos %>% select(duracion) %>% filter(duracion >0)
promedio <- mean(datos5)
promedio
#La llamada promedio dura 7.78 minutos
datos5 <- data.frame(datos %>% select(duracion) %>% filter(duracion >0))
datos5
promedio <- mean(datos5)
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
datos5 <- data.frame(datos %>% select(duracion) %>% filter(duracion >0))
promedio <- mean(datos5$duracion)
promedio
#La llamada promedio dura 7.78 minutos
datos6 <- data.frame(datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n()))
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~CantidadLlamadas, type= "bar")
require(lubridate)
ultimo_eclipse <- "21-08-2017 18:26:40"
ultimo_eclipse <- dmy_hms(ultimo_eclipse)
SynodicMonth <- days(29) + hours(12) + minutes(44) + seconds(3)
saros <- 223*SynodicMonth
siguiente_eclipse <- ultimo_eclipse + saros
siguiente_eclipse
library(readr)
library(dplyr)
require(plotly)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/Lab5/data.csv')
head(datos)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$Mes <- month(datos$`Fecha Creación`, label = T)
datos$Dia <- wday(datos$`Fecha Creación`, label = T)
datos$Inicio <- paste(datos$`Fecha Creación`,datos$`Hora Creación`)
datos$Inicio <- ymd_hms(datos$Inicio)
datos$Final <- paste(datos$`Fecha Final`,datos$`Hora Final`)
datos$Final <- dmy_hms(datos$Final)
datos1 <- datos %>% select(Cod, Call, Mes) %>% filter(Call == "1") %>% group_by(Cod, Mes) %>% count(Call, sort = TRUE)
datos1
datos1$Mes <- factor(datos1$Mes, levels = unique(datos1$Mes)[order(datos1$n, decreasing = TRUE)])
datos1 %>% plot_ly(x= ~Mes, y = ~n, type= "bar")
#El mes con mas llamdas es marzo con el codigo de actualizacion de informacion
datos2 <- datos %>% select(Dia) %>% group_by(Dia) %>% summarise(n = n()) %>% arrange(desc(n))
datos2
datos2$Dia <- factor(datos2$Dia, levels = unique(datos2$Dia)[order(datos2$n, decreasing = TRUE)])
datos2 %>% plot_ly(x= ~Dia, y = ~n, type= "bar")
#El dia mas ocupado es el domingo
datos3 <- datos %>% select(Mes) %>% group_by(Mes) %>% summarise(n = n()) %>% arrange(desc(n))
datos3
datos3$Mes <- factor(datos3$Mes, levels = unique(datos3$Mes)[order(datos3$n, decreasing = TRUE)])
datos3 %>% plot_ly(x= ~Mes, y = ~n, type= "bar")
#El mes mas ocupado es octubre
datos4 <- datos %>% select(`Fecha Creación`) %>% group_by(`Fecha Creación`) %>% summarise(n = n())
datos4
datos4 %>% plot_ly(x= ~`Fecha Creación`, y = ~n, type = 'scatter', mode = 'lines')
#No existe una temporalidad porque no existe una tendencia de lamadas en el tiempo.
datos$duracion <- difftime(datos$Final, datos$Inicio, units = "mins")
datos5 <- data.frame(datos %>% select(duracion) %>% filter(duracion >0))
promedio <- mean(datos5$duracion)
promedio
#La llamada promedio dura 15 minutos tomando en cuenta la duracion de las llamadas positivas.
datos6 <- data.frame(datos %>% select(duracion) %>% filter(duracion >0) %>% group_by(duracion) %>%  summarise(CantidadLlamadas = n()))
datos6
datos6 %>% plot_ly(x= ~duracion, y = ~CantidadLlamadas, type= "bar")
setwd("~/Desktop/Data Wrangling/Github")
library(readr)
library(dplyr)
require(plotly)
datos <- read_csv('Laboratorio 5/Lab5/data.csv')
library(readr)
library(dplyr)
require(plotly)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 5/data.csv')
head(datos)
datos$`Fecha Creación` <- dmy(datos$`Fecha Creación`)
datos$Mes <- month(datos$`Fecha Creación`, label = T)
datos$Dia <- wday(datos$`Fecha Creación`, label = T)
datos$Inicio <- paste(datos$`Fecha Creación`,datos$`Hora Creación`)
datos$Inicio <- ymd_hms(datos$Inicio)
datos$Final <- paste(datos$`Fecha Final`,datos$`Hora Final`)
datos$Final <- dmy_hms(datos$Final)
knit_with_parameters('~/Desktop/Data Wrangling/Github/Laboratorio 5/Laboratorio 5.Rmd')
install.packages("webshot")
webshot::install_phantomjs()
