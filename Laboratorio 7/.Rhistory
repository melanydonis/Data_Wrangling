CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultado <- data.frame(Cuenta = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto))
EstadoResultado
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultado <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto))
EstadoResultado
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultados <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto))
EstadoResultados
CostoVariable <- format(sum(datos$CostoVariable),big.mark = ",")
CostoFijo <- format(sum(datos$CostoFijo),big.mark = ",")
CostoTotal <- format(sum(datos$CostoTotal),big.mark = ",")
Ingreso <- format(sum(datos$factura),big.mark = ",")
MargenBruto <- Ingreso - CostoTotal
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultados <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= format(c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto)),big.mark = ",")
EstadoResultados
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultados <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= format(c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto),big.mark = ","))
EstadoResultados
Ventas <- read_xlsx("VentasUS$.xlsx")
library(readxl)
library(tidyr)
library(dplyr)
require(plotly)
Ventas <- read_xlsx("/Users/melany/Downloads/VentasUS$.xlsx")
str(Ventas)
Ventas <- round(Ventas, 3)
Nombres <- read_xlsx("Nombres.xlsx")
Ventas <- cbind(Nombres,Ventas)
str(Ventas)
colnames(Ventas) <- c("-", "RY'14", "RY'15", "ENE 2015", "FEB 2015", "MAR 2015", "ABR 2015", "MAY 2015", "JUN 2015", "JUL 2015", "AGO 2015", "SEP 2015", "OCT 2015", "NOV 2015", "DIC 2015")
colnames(Ventas)
FabA <- Ventas[2,]
FabA <- FabA[1,4:15]
FabA <- t(FabA)
colnames(FabA) <- c("FabricanteA")
NombresFabA <- c("ENE 2015", "FEB 2015", "MAR 2015", "ABR 2015", "MAY 2015", "JUN 2015", "JUL 2015", "AGO 2015", "SEP 2015", "OCT 2015", "NOV 2015", "DIC 2015")
NombresFabA <- ordered(NombresFabA, levels=c("ENE 2015", "FEB 2015", "MAR 2015", "ABR 2015", "MAY 2015", "JUN 2015", "JUL 2015", "AGO 2015", "SEP 2015", "OCT 2015", "NOV 2015", "DIC 2015"))
VentasTotalesFabA <- c(1274847, 1247292, 1280007, 1322747, 1331005, 1393549, 1391740, 1385435, 1362577, 1371227, 1293061, 1322150)
datos1 <- data.frame(NombresFabA, VentasTotalesFabA)
plot_ly(datos1, x=~NombresFabA, y=~VentasTotalesFabA, name = 'Ventas totales del Fabricante A', type = 'scatter', mode = 'lines')
library(readxl)
library(tidyr)
library(dplyr)
require(plotly)
Ventas <- read_xlsx("VentasUS$.xlsx")
str(Ventas)
Ventas <- round(Ventas, 3)
Nombres <- read_xlsx("Nombres.xlsx")
Ventas <- cbind(Nombres,Ventas)
str(Ventas)
colnames(Ventas) <- c("-", "RY'14", "RY'15", "ENE 2015", "FEB 2015", "MAR 2015", "ABR 2015", "MAY 2015", "JUN 2015", "JUL 2015", "AGO 2015", "SEP 2015", "OCT 2015", "NOV 2015", "DIC 2015")
colnames(Ventas)
FabricanteA <- Ventas[2,4:15]
FabricanteB <- Ventas[7,4:15]
FabricanteC <- Ventas[22,4:15]
FabricanteD <- Ventas[24,4:15]
FabricanteE <- Ventas[30,4:15]
FabricanteF <- Ventas[32,4:15]
FabricanteG <- Ventas[34,4:15]
FabricanteH <- Ventas[36,4:15]
FabricanteI <- Ventas[38,4:15]
FabricanteJ <- Ventas[41,4:15]
FabricanteK <- Ventas[43,4:15]
FabricanteL <- Ventas[45,4:15]
FabricanteM <- Ventas[47,4:15]
FabricanteN <- Ventas[49,4:15]
FabricanteO <- Ventas[50,4:15]
VFabricantes <- rbind(FabricanteA, FabricanteB, FabricanteC, FabricanteD, FabricanteE, FabricanteF, FabricanteG, FabricanteH, FabricanteI, FabricanteJ, FabricanteK, FabricanteL, FabricanteM, FabricanteN, FabricanteO)
VFabricantes$Fabrica <- c("Fábrica A","Fábrica B","Fábrica C","Fábrica D","Fábrica E","Fábrica F","Fábrica G","Fábrica H","Fábrica I","Fábrica J","Fábrica K","Fábrica L","Fábrica M","Fábrica N","Fábrica O")
VFabricantes[is.na(VFabricantes)] <- 0
VFabricantes <- data.frame(t(VFabricantes))
as.numeric(VFabricantes$X2)
as.numeric(VFabricantes$X7)
as.numeric(VFabricantes$X22)
as.numeric(VFabricantes$X24)
as.numeric(VFabricantes$X30)
as.numeric(VFabricantes$X32)
as.numeric(VFabricantes$X34)
as.numeric(VFabricantes$X36)
as.numeric(VFabricantes$X38)
as.numeric(VFabricantes$X41)
as.numeric(VFabricantes$X43)
as.numeric(VFabricantes$X45)
as.numeric(VFabricantes$X47)
as.numeric(VFabricantes$X49)
as.numeric(VFabricantes$X50)
e <- sum(VFabricantes[1,1:15])
M1
M1 <- FA[2,4:15]
FA <- Ventas[2:6,]
NombresFA <- colnames(FA[,4:15])
M1 <- FA[2,4:15]
M2 <- FA[3,4:15]
M3 <- FA[4,4:15]
M4 <- FA[5,4:15]
Marca1 <- c(1197908, 1174753, 1202878, 1247272, 1256876, 1318761, 1314036, 1304513, 1277274, 1283755, 1206799, 1225696)
Marca2 <- c(40665.54, 38646.34, 41947.49, 39917.27, 39977.4, 40966.08, 44184.99, 49363.37, 53408.29, 57364.15, 55453.27, 66265.4)
Marca3 <- c(33840.82, 31965.1, 33762.43, 34955.21, 34067.95, 33810.53, 33518.2, 31558.29, 31894.8, 30107.73, 30808.77, 30188.71)
Marca4 <- c(2433.54, 1927.96, 1419.2, 602.84, 84.35, 11.32, 0, 0, 0, 0, 0, 0)
Nombres <- c("ENE 2015", "FEB 2015", "MAR 2015", "ABR 2015", "MAY 2015", "JUN 2015", "JUL 2015", "AGO 2015", "SEP 2015", "OCT 2015", "NOV 2015", "DIC 2015")
Nombres <- ordered(Nombres, levels=c("ENE 2015", "FEB 2015", "MAR 2015", "ABR 2015", "MAY 2015", "JUN 2015", "JUL 2015", "AGO 2015", "SEP 2015", "OCT 2015", "NOV 2015", "DIC 2015"))
datos <- data.frame(Nombres, Marca1, Marca2, Marca3, Marca4)
plot_ly(datos, x =~Nombres, y =~Marca1, type = 'bar', name = 'Marca 1') %>%
add_trace(y =~Marca2, name = 'Marca 2') %>%
add_trace(y =~Marca3, name = 'Marca 3') %>%
add_trace(y =~Marca4, name = 'Marca 4') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
Sum1 <- sum(Marca1)
Sum2 <- sum(Marca2)
Sum3 <- sum(Marca3)
Sum4 <- sum(Marca4)
sum <- sum(Sum1,Sum2,Sum3,Sum4)
e <- sum(datos[1,2:5])
f <- sum(datos[2,2:5])
mz <- sum(datos[3,2:5])
a <- sum(datos[4,2:5])
ma <- sum(datos[5,2:5])
jn <- sum(datos[6,2:5])
jl <- sum(datos[7,2:5])
ag <- sum(datos[8,2:5])
s <- sum(datos[9,2:5])
o <- sum(datos[10,2:5])
n <- sum(datos[11,2:5])
d <- sum(datos[11,2:5])
datos$mes <- c(e,f,mz,a,ma,jn,jl,ag,s,o,n,d)
datos <- datos %>% mutate(Marketshare1 = percent((Marca1/mes)),Marketshare2 = percent(Marca2/mes),Marketshare3 = percent(Marca3/mes),Marketshare4 = percent(Marca4/mes))
View(M1)
M1 <- FA[2,1:15]
View(M1)
library(readr)
library(dplyr)
require(plotly)
require(stringr)
require(tidyr)
library(lubridate)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 7/c1.csv')[,1:22]
head(datos)
datos$Camion_5 <- as.numeric(str_replace(str_replace(datos$Camion_5,"Q", ""),"Q-", "0"))
datos$Pickup <- as.numeric(str_replace(str_replace(datos$Pickup,"Q", ""),"Q-", "0"))
datos$Moto <- as.numeric(str_replace(str_replace(datos$Moto,"Q", ""),"Q-", "0"))
datos$factura <- as.numeric(str_replace(datos$factura,"Q", ""))
datos$directoCamion_5 <- as.numeric(str_replace(str_replace(datos$directoCamion_5,"Q", ""),"Q-", "0"))
datos$directoPickup <- as.numeric(str_replace(str_replace(datos$directoPickup,"Q", ""),"Q-", "0"))
datos$directoMoto <- as.numeric(str_replace(str_replace(datos$directoMoto,"Q", ""),"Q-", "0"))
datos$fijoCamion_5 <- as.numeric(str_replace(str_replace(datos$fijoCamion_5,"Q", ""),"Q-", "0"))
datos$fijoPickup <- as.numeric(str_replace(str_replace(datos$fijoPickup,"Q", ""),"Q-", "0"))
datos$fijoMoto <- as.numeric(str_replace(str_replace(datos$fijoMoto,"Q", ""),"Q-", "0"))
str(datos)
View(datos)
datos$Camion_5 <- as.numeric(str_replace(str_replace(datos$Camion_5,"Q", ""),"Q-", "0"))
datos$Pickup <- as.numeric(str_replace(str_replace(datos$Pickup,"Q", ""),"Q-", "0"))
datos$Moto <- as.numeric(str_replace(str_replace(datos$Moto,"Q", ""),"Q-", "0"))
datos$factura <- as.numeric(str_replace(datos$factura,"Q", ""))
datos$directoCamion_5 <- as.numeric(str_replace(str_replace(datos$directoCamion_5,"Q", ""),"Q-", "0"))
datos$directoPickup <- as.numeric(str_replace(str_replace(datos$directoPickup,"Q", ""),"Q-", "0"))
datos$directoMoto <- as.numeric(str_replace(str_replace(datos$directoMoto,"Q", ""),"Q-", "0"))
datos$fijoCamion_5 <- as.numeric(str_replace(str_replace(datos$fijoCamion_5,"Q", ""),"Q-", "0"))
datos$fijoPickup <- as.numeric(str_replace(str_replace(datos$fijoPickup,"Q", ""),"Q-", "0"))
datos$fijoMoto <- as.numeric(str_replace(str_replace(datos$fijoMoto,"Q", ""),"Q-", "0"))
str(datos)
View(datos)
datos <- gather(datos, key="Vehiculo", value = "CostoVariable", directoCamion_5, directoPickup, directoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoFijo", fijoCamion_5, fijoPickup, fijoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoTotal", Camion_5, Pickup, Moto)
datos <- gather(datos, key="Minutos", value = "Tiempo", `5-30`, `30-45`, `45-75`, `75-120`,`120+`)
datos <- na.omit(datos)
head(datos)
#Estado de resultados breve del 2017.
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultados <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= format(c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto),big.mark = ","))
EstadoResultados
data <- datos %>% select(Fecha, factura, CostoTotal)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
data %>% select(Fecha, factura, Cod) %>% group_by(mes) %>% summarise(Ganancia = sum(factura)-sum(CostoTotal)) %>% arrange(desc(Ganancia)) %>% distinct()
data %>% select(Fecha, factura, CostoTotal) %>% group_by(mes) %>% summarise(Ganancia = sum(factura)-sum(CostoTotal)) %>% arrange(desc(Ganancia)) %>% distinct()
data$mes <- month(data$Fecha)
data %>% select(Fecha, factura, CostoTotal) %>% group_by(mes) %>% summarise(Ganancia = sum(factura)-sum(CostoTotal)) %>% arrange(desc(Ganancia)) %>% distinct()
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ganancia = sum(factura)-sum(CostoTotal)) %>% arrange(desc(Ganancia)) %>% distinct()
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ganancia = sum(factura)-sum(CostoTotal)) %>% arrange(desc(Ganancia)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ganancia, type= "scatter", mode = "line")
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingreso = average(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingreso, type= "scatter", mode = "line")
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingreso = prom(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingreso, type= "scatter", mode = "line")
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingreso = mean(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingreso, type= "scatter", mode = "line")
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingreso = mean(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingreso, type= "scatter", mode = "line", title = "Promedio de ingreso por mes")
#Promedio de ingreso por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingreso = mean(factura)) %>% distinct()
#Promedio de ingreso por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingreso = mean(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingreso, type= "scatter", mode = "line")
#Promedio de ingreso por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes, Ingreso = mean(Tarifa)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingreso, type= "scatter", mode = "line")
#Promedio de ingreso por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes, TarifaMean = mean(Tarifa)) %>% distinct() %>% plot_ly(x= ~mes, y = ~TarifaMean, type= "scatter", mode = "line")
#Promedio de ingreso por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes, TarifaMean = mean(Tarifa)) %>% distinct()
#Promedio de ingreso por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% distinct() %>% plot_ly(x= ~mes, y = ~TarifaUnidad, type= "scatter", mode = "line")
#¿Debemos abrir más centros de distribución?
d4 <- datos %>% select(origen) %>% group_by(origen) %>% summarise(n= n()) %>% arrange(desc(n)) %>% distinct()
d4
d4$origen <- factor(d4$origen, levels = unique(d4$origen)[order(d4$n, decreasing = TRUE)])
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar")
d4 %>% select(origen, factura) %>% group_by(origen) %>% summarise(ingreso)
#¿Debemos abrir más centros de distribución?
d4 <- datos %>% select(origen, factura) %>% group_by(origen) %>% summarise(n= n()) %>% arrange(desc(n)) %>% distinct()
d4
d4$origen <- factor(d4$origen, levels = unique(d4$origen)[order(d4$n, decreasing = TRUE)])
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar")
d4 %>% select(origen, factura) %>% group_by(origen) %>% summarise(ingreso)
#¿Debemos abrir más centros de distribución?
d4 <- datos %>% select(origen, factura) %>% group_by(origen) %>% summarise(n= n()) %>% arrange(desc(n)) %>% distinct()
d4
d4$origen <- factor(d4$origen, levels = unique(d4$origen)[order(d4$n, decreasing = TRUE)])
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar")
datos %>% select(origen, factura) %>% group_by(origen) %>% summarise(ingreso)
datos %>% select(origen, factura, Vehiculo) %>% group_by(origen) %>% summarise(ingreso = sum(factura))
datos %>% select(origen, factura, Vehiculo) %>% group_by(origen,Vehiculo) %>% summarise(ingreso = sum(factura))
d4 <- datos %>% select(origen, factura) %>% group_by(origen) %>% summarise(n= n()) %>% arrange(desc(n)) %>% distinct()
d4
d4$origen <- factor(d4$origen, levels = unique(d4$origen)[order(d4$n, decreasing = TRUE)])
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar")
#¿Debemos abrir más centros de distribución?
d4 <- datos %>% select(origen, factura) %>% group_by(origen) %>% summarise(n= n(), promedio = mean(n)) %>% arrange(desc(n)) %>% distinct()
d4
prom <- mean(d4$n)
prom
d4
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar") %>% add_trace(y = ~prom,mode = 'lines')
d4 <- datos %>% select(origen, factura) %>% group_by(origen) %>% summarise(n= n()) %>% arrange(desc(n)) %>% distinct()
d4
prom <- mean(d4$n)
d4$origen <- factor(d4$origen, levels = unique(d4$origen)[order(d4$n, decreasing = TRUE)])
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar") %>% add_trace(y = ~prom,mode = 'lines')
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar") %>% add_line(y = ~prom, mode = 'lines')
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar") %>% add_lines(y = ~prom, mode = 'lines')
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar") %>% add_lines(y = ~prom, name = "Promedio", mode = 'lines')
d4 %>% plot_ly(x= ~origen, y = ~n, type= "bar") %>% add_lines(y = prom, name = "Promedio", mode = 'lines')
library(readr)
library(dplyr)
require(plotly)
require(stringr)
require(tidyr)
library(lubridate)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 7/c1.csv')[,1:22]
head(datos)
datos$Camion_5 <- as.numeric(str_replace(str_replace(datos$Camion_5,"Q", ""),"Q-", "0"))
datos$Pickup <- as.numeric(str_replace(str_replace(datos$Pickup,"Q", ""),"Q-", "0"))
datos$Moto <- as.numeric(str_replace(str_replace(datos$Moto,"Q", ""),"Q-", "0"))
datos$factura <- as.numeric(str_replace(datos$factura,"Q", ""))
datos$directoCamion_5 <- as.numeric(str_replace(str_replace(datos$directoCamion_5,"Q", ""),"Q-", "0"))
datos$directoPickup <- as.numeric(str_replace(str_replace(datos$directoPickup,"Q", ""),"Q-", "0"))
datos$directoMoto <- as.numeric(str_replace(str_replace(datos$directoMoto,"Q", ""),"Q-", "0"))
datos$fijoCamion_5 <- as.numeric(str_replace(str_replace(datos$fijoCamion_5,"Q", ""),"Q-", "0"))
datos$fijoPickup <- as.numeric(str_replace(str_replace(datos$fijoPickup,"Q", ""),"Q-", "0"))
datos$fijoMoto <- as.numeric(str_replace(str_replace(datos$fijoMoto,"Q", ""),"Q-", "0"))
str(datos)
View(datos)
datos <- gather(datos, key="Vehiculo", value = "CostoVariable", directoCamion_5, directoPickup, directoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoFijo", fijoCamion_5, fijoPickup, fijoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoTotal", Camion_5, Pickup, Moto)
datos <- gather(datos, key="Minutos", value = "Tiempo", `5-30`, `30-45`, `45-75`, `75-120`,`120+`)
datos <- na.omit(datos)
head(datos)
#Estado de resultados breve del 2017.
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultados <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= format(c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto),big.mark = ","))
EstadoResultados
#Las ganancias del año
#¿Cómo quedó el tarifario en el 2017 por unidad?
#Fechas con lubridate.
data <- datos %>% select(Fecha, factura, CostoTotal, Cod)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
#
d1<- data %>% select(Fecha, ID, factura, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% arrange(desc(TarifaUnidad)) %>% distinct()
library(readr)
library(dplyr)
require(plotly)
require(stringr)
require(tidyr)
library(lubridate)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 7/c1.csv')[,1:22]
head(datos)
#Quite las Q y reemplace con un 0 las observaciones sin datos.
datos$Camion_5 <- as.numeric(str_replace(str_replace(datos$Camion_5,"Q", ""),"Q-", "0"))
datos$Pickup <- as.numeric(str_replace(str_replace(datos$Pickup,"Q", ""),"Q-", "0"))
datos$Moto <- as.numeric(str_replace(str_replace(datos$Moto,"Q", ""),"Q-", "0"))
datos$factura <- as.numeric(str_replace(datos$factura,"Q", ""))
datos$directoCamion_5 <- as.numeric(str_replace(str_replace(datos$directoCamion_5,"Q", ""),"Q-", "0"))
datos$directoPickup <- as.numeric(str_replace(str_replace(datos$directoPickup,"Q", ""),"Q-", "0"))
datos$directoMoto <- as.numeric(str_replace(str_replace(datos$directoMoto,"Q", ""),"Q-", "0"))
datos$fijoCamion_5 <- as.numeric(str_replace(str_replace(datos$fijoCamion_5,"Q", ""),"Q-", "0"))
datos$fijoPickup <- as.numeric(str_replace(str_replace(datos$fijoPickup,"Q", ""),"Q-", "0"))
datos$fijoMoto <- as.numeric(str_replace(str_replace(datos$fijoMoto,"Q", ""),"Q-", "0"))
str(datos)
View(datos)
#Hice tidy la data y omiti los valores con 0 ya que estos no son importantes.
datos <- gather(datos, key="Vehiculo", value = "CostoVariable", directoCamion_5, directoPickup, directoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoFijo", fijoCamion_5, fijoPickup, fijoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoTotal", Camion_5, Pickup, Moto)
datos <- gather(datos, key="Minutos", value = "Tiempo", `5-30`, `30-45`, `45-75`, `75-120`,`120+`)
datos <- na.omit(datos)
head(datos)
#Estado de resultados breve del 2017.
CostoVariable <- sum(datos$CostoVariable)
CostoFijo <- sum(datos$CostoFijo)
CostoTotal <- sum(datos$CostoTotal)
Ingreso <- sum(datos$factura)
MargenBruto <- Ingreso - CostoTotal
EstadoResultados <- data.frame(EstadoResultados = c("Ingreso", "CostoVariable", "CostoFijo", "CostoTotal", "MargenBruto"), Q= format(c(Ingreso, CostoVariable, CostoFijo, CostoTotal, MargenBruto),big.mark = ","))
EstadoResultados
#Las ganancias del año 2017 son mayores a 8 millones.
#¿Cómo quedó el tarifario en el 2017 por unidad?
#Fechas con lubridate.
data <- datos %>% select(Fecha, factura, CostoTotal, Cod, ID)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
# Tarifa por poste de cada uno de los servicios.
d1<- data %>% select(Fecha, ID, factura, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% arrange(desc(TarifaUnidad)) %>% distinct()
d1
d1$Cod <- factor(d1$Cod, levels = unique(d1$Cod)[order(d1$TarifaUnidad, decreasing = TRUE)])
d1 %>% plot_ly(x= ~Cod, y = ~TarifaUnidad, type= "bar")
#Promedio de tarifa por poste por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingresos = sum(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingresos, type= "scatter", mode = "line")
#El servicio que más cuesta es el cambio de puentes. Sin embargo, es el servicio que menos se hace, lo que podria deberse a su precio. El mejor servicio podría ser el de revisión, ya que, aunque su tarifa no es tan alta, es el que más veces se hace y el que más ingresos genera. El mes en que el que los ingresos son más altos es en Noviembre, durante el año los ingresos se mantienen relativamente estables, solamente en febrero baja drasticamente, lo que podria deberse a que el clima en ese mes no genera mayores problemas o por ser un mes con menos días a los demás.
#Las tarifas actuales ¿son aceptables por el cliente? ¿Estamos en números rojos?
#Numero de postes
datos  %>% summarise(n_distinct(ID))
#Porcentaje que representan los servicios sobre la cantidad total de observaciones y la ganancia que representa cada uno.
d2<- datos %>% select(ID, factura, Cod, CostoTotal) %>% group_by(Cod) %>% summarise(Postes = n(), Ganancia =  (sum(factura) - sum(CostoTotal)), Porcentaje = paste0(round(100 * Postes/263725, 0), "%")) %>% arrange(desc(Ganancia)) %>% distinct()
d2
Porcentajes = d2$Postes/263725
plot_ly(d2, labels = ~Cod, values = ~Porcentajes, type = 'pie')
#
#¿Cómo quedó el tarifario en el 2017 por unidad?
#Fechas con lubridate.
data <- datos %>% select(Fecha, factura, CostoTotal, Cod, ID)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
# Tarifa por poste de cada uno de los servicios.
d1<- data %>% select(Fecha, ID, factura, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% arrange(desc(TarifaUnidad)) %>% distinct()
d1
d1$Cod <- factor(d1$Cod, levels = unique(d1$Cod)[order(d1$TarifaUnidad, decreasing = TRUE)])
d1 %>% plot_ly(x= ~Cod, y = ~TarifaUnidad, type= "bar")
#El servicio que más cuesta es el cambio de puentes. Sin embargo, es el servicio que menos se hace, lo que podria deberse a su precio. El mejor servicio podría ser el de revisión, ya que, aunque su tarifa no es tan alta, es el que más veces se hace y el que más ingresos genera.
d1<- data %>% select(Fecha, ID, CostoTotal, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Costo = sum(CostoTotal), CostoUnidad = Costo/Postes) %>% arrange(desc(CostoUnidad)) %>% distinct()
d1
d1$Cod <- factor(d1$Cod, levels = unique(d1$Cod)[order(d1$TarifaUnidad, decreasing = TRUE)])
d1$Cod <- factor(d1$Cod, levels = unique(d1$Cod)[order(d1$CostoUnidad, decreasing = TRUE)])
d1 %>% plot_ly(x= ~Cod, y = ~CostoUnidad, type= "bar")
#¿Cómo quedó el tarifario en el 2017 por unidad?
#Fechas con lubridate.
data <- datos %>% select(Fecha, factura, CostoTotal, Cod, ID)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
# Tarifa por poste de cada uno de los servicios.
d1<- data %>% select(Fecha, ID, factura, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% arrange(desc(TarifaUnidad)) %>% distinct()
d1
d1$Cod <- factor(d1$Cod, levels = unique(d1$Cod)[order(d1$TarifaUnidad, decreasing = TRUE)])
d1 %>% plot_ly(x= ~Cod, y = ~TarifaUnidad, type= "bar")
d1<- data %>% select(Fecha, ID, CostoTotal, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Costo = sum(CostoTotal), CostoUnidad = Costo/Postes) %>% arrange(desc(CostoUnidad)) %>% distinct()
d1
d1$Cod <- factor(d1$Cod, levels = unique(d1$Cod)[order(d1$CostoUnidad, decreasing = TRUE)])
d1 %>% plot_ly(x= ~Cod, y = ~CostoUnidad, type= "bar")
#Las tarifas por cada poste es esta entre Q100 y Q200, por lo que no El servicio que más cuesta es el cambio de puentes. Sin embargo, es el servicio que menos se hace, lo que podria deberse a su precio. El mejor servicio podría ser el de revisión, ya que, aunque su tarifa no es tan alta, es el que más veces se hace y el que más ingresos genera.
d <- merge(d1g,d1c, "Cod")
# Tarifa por poste de cada uno de los servicios.
d1g<- data %>% select(Fecha, ID, factura, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% arrange(desc(TarifaUnidad)) %>% distinct()
d1g
d1g$Cod <- factor(d1g$Cod, levels = unique(d1g$Cod)[order(d1g$TarifaUnidad, decreasing = TRUE)])
d1g %>% plot_ly(x= ~Cod, y = ~TarifaUnidad, type= "bar")
d <- merge(d1g,d1c, "Cod")
d1c<- data %>% select(Fecha, ID, CostoTotal, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Costo = sum(CostoTotal), CostoUnidad = Costo/Postes) %>% arrange(desc(CostoUnidad)) %>% distinct()
d1c
d1c$Cod <- factor(d1c$Cod, levels = unique(d1c$Cod)[order(d1c$CostoUnidad, decreasing = TRUE)])
d1c %>% plot_ly(x= ~Cod, y = ~CostoUnidad, type= "bar")
d <- merge(d1g,d1c, "Cod")
d$ganancia <- d$TarifaUnidad-d$CostoUnidad
d
d %>% arrange(desc(ganancia))
mean(d$ganancia)
d %>% select(TarifaUnidad, CostoUnidad) %>% arrange(desc(ganancia))
d$ganancia <- d$TarifaUnidad-d$CostoUnidad
d %>% select(TarifaUnidad, CostoUnidad) %>% arrange(desc(ganancia))
d %>% select(TarifaUnidad, CostoUnidad,ganancia) %>% arrange(desc(ganancia))
d %>% select(Cod,TarifaUnidad, CostoUnidad,ganancia) %>% arrange(desc(ganancia))
mean(d$ganancia)
#¿Cómo quedó el tarifario en el 2017 por unidad?
#Fechas con lubridate.
data <- datos %>% select(Fecha, factura, CostoTotal, Cod, ID)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
# Tarifa por poste de cada uno de los servicios.
d1g<- data %>% select(Fecha, ID, factura, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Tarifa = sum(factura), TarifaUnidad = Tarifa/Postes) %>% arrange(desc(TarifaUnidad)) %>% distinct()
d1g
d1g$Cod <- factor(d1g$Cod, levels = unique(d1g$Cod)[order(d1g$TarifaUnidad, decreasing = TRUE)])
d1g %>% plot_ly(x= ~Cod, y = ~TarifaUnidad, type= "bar")
d1c<- data %>% select(Fecha, ID, CostoTotal, Cod) %>% group_by(Cod) %>% summarise(Postes = n(), Costo = sum(CostoTotal), CostoUnidad = Costo/Postes) %>% arrange(desc(CostoUnidad)) %>% distinct()
d1c
d1c$Cod <- factor(d1c$Cod, levels = unique(d1c$Cod)[order(d1c$CostoUnidad, decreasing = TRUE)])
d1c %>% plot_ly(x= ~Cod, y = ~CostoUnidad, type= "bar")
d <- merge(d1g,d1c, "Cod")
d$ganancia <- d$TarifaUnidad-d$CostoUnidad
d %>% select(Cod,TarifaUnidad, CostoUnidad,ganancia) %>% arrange(desc(ganancia))
mean(d$ganancia)
#Las tarifas por cada poste es esta entre Q100 y Q200 y los costos entre Q100 y Q140, lo que significa que las ganancias son en promedio de Q35 por poste. El servicio que tiene un ingreso más es el cambio de puentes. Sin embargo, es el servicio que menos se hace, lo que podria deberse a su precio, ya que es el servicio más costos para la empresa. El mejor servicio podría ser el de revisión, ya que, aunque su tarifa no es tan alta, es el que más veces se hace y el que más ingresos genera.
#¿Cuándo podríamos perderle a un mantenimiento y/o reparación?
#Mantenimiento
dMAN <- datos %>% filter(Cod=="VERIFICACION_INDICADORES" | Cod=="REVISION"| Cod== "REVISION_TRANSFORMADOR"| Cod== "CAMBIO_FUSIBLE"| Cod=="VERIFICACION_MEDIDORES"| Cod== "VISITA")
Costot <- sum(dMAN$CostoTotal)
m <- dMAN %>% select(Minutos, CostoTotal) %>% group_by(Minutos) %>% summarise(Costo = sum(CostoTotal), Porcentaje = paste0(round(100 * Costo/Costot, 0), "%")) %>% distinct() %>% arrange(desc(Costo))
Porcentajes <- m$Costo/Costot
m
m %>% plot_ly(labels = ~Minutos, values = ~Porcentajes, type = 'pie')
dMAN %>% select(Cod, Minutos, height) %>% group_by(Cod, Minutos, height) %>% count(Minutos) %>% distinct() %>% arrange(desc(n))
#¿Cuándo podríamos perderle a un mantenimiento y/o reparación?
#Mantenimiento
dMAN <- datos %>% filter(Cod=="VERIFICACION_INDICADORES" | Cod=="REVISION"| Cod== "REVISION_TRANSFORMADOR"| Cod== "CAMBIO_FUSIBLE"| Cod=="VERIFICACION_MEDIDORES"| Cod== "VISITA")
Costot <- sum(dMAN$CostoTotal)
m <- dMAN %>% select(Minutos, CostoTotal) %>% group_by(Minutos) %>% summarise(Costo = sum(CostoTotal), Porcentaje = paste0(round(100 * Costo/Costot, 0), "%")) %>% distinct() %>% arrange(desc(Costo))
Porcentajes <- m$Costo/Costot
m
m %>% plot_ly(labels = ~Minutos, values = ~Porcentajes, type = 'pie')
dMAN %>% select(Cod, Minutos, height) %>% group_by(Cod, Minutos, height) %>% count(Minutos) %>% distinct() %>% arrange(desc(n))
# La mayoria de
unique(datos$height)
#¿Cuándo podríamos perderle a un mantenimiento y/o reparación?
#Mantenimiento
dMAN <- datos %>% filter(Cod=="VERIFICACION_INDICADORES" | Cod=="REVISION"| Cod== "REVISION_TRANSFORMADOR"| Cod== "CAMBIO_FUSIBLE"| Cod=="VERIFICACION_MEDIDORES"| Cod== "VISITA")
Costot <- sum(dMAN$CostoTotal)
m <- dMAN %>% select(Minutos, CostoTotal) %>% group_by(Minutos) %>% summarise(Costo = sum(CostoTotal), Porcentaje = paste0(round(100 * Costo/Costot, 0), "%")) %>% distinct() %>% arrange(desc(Costo))
Porcentajes <- m$Costo/Costot
m
library(readr)
library(dplyr)
require(plotly)
require(stringr)
require(tidyr)
library(lubridate)
datos <- read_csv('/Users/melany/Desktop/Data Wrangling/Github/Laboratorio 7/c1.csv')[,1:22]
head(datos)
#Quite las Q y reemplace con un 0 las observaciones sin datos.
datos$Camion_5 <- as.numeric(str_replace(str_replace(datos$Camion_5,"Q", ""),"Q-", "0"))
datos$Pickup <- as.numeric(str_replace(str_replace(datos$Pickup,"Q", ""),"Q-", "0"))
datos$Moto <- as.numeric(str_replace(str_replace(datos$Moto,"Q", ""),"Q-", "0"))
datos$factura <- as.numeric(str_replace(datos$factura,"Q", ""))
datos$directoCamion_5 <- as.numeric(str_replace(str_replace(datos$directoCamion_5,"Q", ""),"Q-", "0"))
datos$directoPickup <- as.numeric(str_replace(str_replace(datos$directoPickup,"Q", ""),"Q-", "0"))
datos$directoMoto <- as.numeric(str_replace(str_replace(datos$directoMoto,"Q", ""),"Q-", "0"))
datos$fijoCamion_5 <- as.numeric(str_replace(str_replace(datos$fijoCamion_5,"Q", ""),"Q-", "0"))
datos$fijoPickup <- as.numeric(str_replace(str_replace(datos$fijoPickup,"Q", ""),"Q-", "0"))
datos$fijoMoto <- as.numeric(str_replace(str_replace(datos$fijoMoto,"Q", ""),"Q-", "0"))
str(datos)
View(datos)
#Hice tidy la data y omiti los valores con 0 ya que estos no son importantes.
datos <- gather(datos, key="Vehiculo", value = "CostoVariable", directoCamion_5, directoPickup, directoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoFijo", fijoCamion_5, fijoPickup, fijoMoto)
datos <- gather(datos, key="Vehiculo", value = "CostoTotal", Camion_5, Pickup, Moto)
datos <- gather(datos, key="Minutos", value = "Tiempo", `5-30`, `30-45`, `45-75`, `75-120`,`120+`)
datos <- na.omit(datos)
head(datos)
#Las tarifas actuales ¿son aceptables por el cliente? ¿Estamos en números rojos?
#Numero de postes
datos  %>% summarise(n_distinct(ID))
#Porcentaje que representan los servicios sobre la cantidad total de observaciones y la ganancia que representa cada uno.
d2<- datos %>% select(ID, factura, Cod, CostoTotal) %>% group_by(Cod) %>% summarise(Postes = n(), Ganancia =  (sum(factura) - sum(CostoTotal)), Porcentaje = paste0(round(100 * Postes/263725, 0), "%")) %>% arrange(desc(Ganancia)) %>% distinct()
d2
Porcentajes = d2$Postes/263725
plot_ly(d2, labels = ~Cod, values = ~Porcentajes, type = 'pie')
#Promedio de tarifa por poste por mes
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingresos = sum(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingresos, type= "scatter", mode = "line")
data <- datos %>% select(Fecha, factura, CostoTotal, Cod, ID)
data$Fecha <- dmy(data$Fecha)
data$mes <- month(data$Fecha)
data %>% select(Fecha, factura, CostoTotal, mes) %>% group_by(mes) %>% summarise(Ingresos = sum(factura)) %>% distinct() %>% plot_ly(x= ~mes, y = ~Ingresos, type= "scatter", mode = "line")
data %>% filter(mes = 2)
data %>% filter(mes == 2)
data %>% filter(mes == 2) %>% group_by(mes)
data %>% filter(mes == 2) %>% group_by(mes)
data %>% filter(mes == 2) %>% group_by(Cod)
data %>% select(mes,factura,Cod) %>% filter(mes == 2) %>% group_by(Cod)
data %>% select(mes,factura,Cod) %>% filter(mes == 2) %>% group_by(Cod) %>% summarise(ingreso =mean(factura))
data %>% select(mes,factura,Cod) %>% filter(mes == 2) %>% group_by(Cod) %>% summarise(ingreso =sum(factura), postes=n())
